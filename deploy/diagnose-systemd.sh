#!/bin/bash

# MyServ - Diagn√≥stico e Corre√ß√£o de Problemas do systemd
# Autor: Rom√°rio Rodrigues <romariorodrigues.dev@gmail.com>

echo "üîç Diagn√≥stico de Problemas do systemd"
echo "====================================="
echo ""

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${GREEN}[INFO]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }
info() { echo -e "${BLUE}[DEBUG]${NC} $1"; }

log "Verificando sistema de init..."

# 1. Verificar PID 1
info "PID 1 atual:"
ps -p 1 -o comm= 2>/dev/null || echo "N√£o foi poss√≠vel verificar PID 1"

# 2. Verificar se systemd est√° presente
info "Verificando systemd:"
if [ -f /run/systemd/system ]; then
    echo "‚úÖ /run/systemd/system existe"
else
    echo "‚ùå /run/systemd/system n√£o existe"
fi

if command -v systemctl >/dev/null 2>&1; then
    echo "‚úÖ systemctl comando existe"
else
    echo "‚ùå systemctl comando n√£o encontrado"
fi

# 3. Testar systemctl
info "Testando systemctl:"
if systemctl is-system-running >/dev/null 2>&1; then
    echo "‚úÖ systemd est√° funcionando"
    SYSTEMD_WORKING=true
else
    echo "‚ùå systemd n√£o est√° funcionando"
    SYSTEMD_WORKING=false
fi

# 4. Verificar container/ambiente
info "Verificando ambiente:"
if [ -f /.dockerenv ]; then
    warn "üê≥ Executando em container Docker"
elif [ -n "$container" ]; then
    warn "üì¶ Executando em container ($container)"
elif grep -q "container=lxc" /proc/1/environ 2>/dev/null; then
    warn "üì¶ Executando em container LXC"
else
    echo "‚úÖ Executando em m√°quina virtual/f√≠sica"
fi

# 5. Verificar servi√ßos alternativos
info "Verificando sistemas de init alternativos:"

if [ -f /sbin/upstart ]; then
    echo "‚úÖ Upstart dispon√≠vel"
fi

if [ -f /etc/init.d/rcS ]; then
    echo "‚úÖ SysV init dispon√≠vel"
fi

if command -v service >/dev/null 2>&1; then
    echo "‚úÖ Comando 'service' dispon√≠vel"
fi

echo ""
echo "üîß RECOMENDA√á√ïES:"
echo "=================="

if [ "$SYSTEMD_WORKING" = true ]; then
    log "systemd est√° funcionando! Pode usar instala√ß√£o normal:"
    echo "   wget https://raw.githubusercontent.com/romariorodrgues/myserv/main/deploy/ec2-setup-ultra-simple.sh"
    echo "   chmod +x ec2-setup-ultra-simple.sh"
    echo "   ./ec2-setup-ultra-simple.sh"
else
    warn "systemd n√£o est√° funcionando. Use instala√ß√£o alternativa:"
    echo "   wget https://raw.githubusercontent.com/romariorodrgues/myserv/main/deploy/ec2-setup-no-systemd.sh"
    echo "   chmod +x ec2-setup-no-systemd.sh"
    echo "   ./ec2-setup-no-systemd.sh"
fi

echo ""
echo "üõ†Ô∏è SOLU√á√ïES ALTERNATIVAS:"
echo "=========================="
echo ""
echo "1. Reiniciar inst√¢ncia EC2:"
echo "   ‚Ä¢ √Äs vezes resolve problemas tempor√°rios do systemd"
echo ""
echo "2. Verificar se √© uma AMI espec√≠fica:"
echo "   ‚Ä¢ Algumas AMIs personalizadas podem ter systemd desabilitado"
echo ""
echo "3. Usar scripts sem systemd:"
echo "   ‚Ä¢ Nossos scripts alternativos funcionam com qualquer init system"
echo ""

# Executar automaticamente a solu√ß√£o apropriada
echo "üöÄ EXECUTAR SOLU√á√ÉO AUTOMATICAMENTE?"
echo "===================================="
read -p "Deseja executar a instala√ß√£o apropriada agora? (s/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Ss]$ ]]; then
    if [ "$SYSTEMD_WORKING" = true ]; then
        log "Executando instala√ß√£o com systemd..."
        wget -qO- https://raw.githubusercontent.com/romariorodrgues/myserv/main/deploy/ec2-setup-ultra-simple.sh | bash
    else
        log "Executando instala√ß√£o sem systemd..."
        wget -qO- https://raw.githubusercontent.com/romariorodrgues/myserv/main/deploy/ec2-setup-no-systemd.sh | bash
    fi
else
    log "OK, voc√™ pode executar manualmente depois."
fi
